#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'optparse'
require 'vcr'
require 'vcr/proxy'

ARGV << '-h' if ARGV.empty?

OptionParser.new do |opts|
  opts.banner = 'Usage: vcr-proxy [options]'

  opts.on('-r', '--record=once', 'Record mode') do |n|
    VCR::Proxy.config.record_mode = n.to_sym
  end

  opts.on('-e', '--endpoint=http://example.com', 'Proxy endpoint') do |n|
    VCR::Proxy.config.endpoint = n
  end

  opts.on('-l', '--library-dir=fixtures/vcr_cassettes', 'Library directory') do |n|
    VCR::Proxy.config.cassette_library_dir = n
  end

  opts.on('-p', '--port=8099', Integer, 'Listening port') do |n|
    VCR::Proxy.config.port = n
  end

  opts.on('-b', '--bind=0.0.0.0', 'Bind IP') do |n|
    VCR::Proxy.config.bind = n
  end

  opts.on_tail('-v', '--version', 'Show program version') do
    puts VCR::Proxy::VERSION
    exit
  end

  opts.on_tail('-h', '--help', 'Show this message') do
    puts opts
    exit
  end
end.parse!

VCR.configure do |config|
  config.cassette_library_dir = VCR::Proxy.config.cassette_library_dir
  config.hook_into :faraday
end

require 'vcr/proxy/app'
App.run!
